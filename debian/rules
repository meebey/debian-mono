#!/usr/bin/make -f

#export DH_VERBOSE=1
export MONO_SHARED_DIR=$(CURDIR)

VERSION = $(shell dpkg-parsechangelog | grep ^Vers | cut -d\  -f2)
UPVERSION = $(shell echo $(VERSION) | sed 's,-.*,,' | sed 's,+dfsg.*,,') 
NEXT_UPVERSION = $(shell perl -e '$$_=pop; s/(\d+)$$/$$1+1/e; print' $(UPVERSION))

RUN_MONO = LD_LIBRARY_PATH=debian/tmp/usr/lib MONO_PATH=debian/tmp/usr/lib/mono/1.0:debian/tmp/usr/lib/mono/2.0 debian/tmp/usr/bin/mono

DEB_BUILD_ARCH := $(shell dpkg-architecture -qDEB_BUILD_ARCH)
DEB_HOST_ARCH := $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_BUILD_GNU_TYPE := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_GNU_TYPE  := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)

ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
	CONF_FLAGS += --build $(DEB_HOST_GNU_TYPE)
else
	CONF_FLAGS += --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
endif

ifeq ($(DEB_BUILD_ARCH_OS), kfreebsd)
        CONF_FLAGS += --enable-minimal=aot
endif

ifeq ($(DEB_BUILD_ARCH), i386)
	CONF_FLAGS += --with-sigaltstack=yes
else ifeq ($(DEB_BUILD_ARCH), amd64)
	CONF_FLAGS += --with-sigaltstack=yes
else
	CONF_FLAGS += --with-sigaltstack=no
endif

ifeq ($(DEB_BUILD_ARCH), arm)
	CONF_FLAGS += --with-tls=pthread
else ifeq ($(DEB_BUILD_ARCH), armeb)
	CONF_FLAGS += --with-tls=pthread
else ifeq ($(DEB_BUILD_ARCH), armel)
	CONF_FLAGS += --with-tls=pthread --with-fpu=NONE
else
	CONF_FLAGS += --with-tls=__thread
endif

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0 -g
else
	CFLAGS += -O2 -g
endif

CONFIGURE =	CFLAGS="$(CFLAGS)" \
		./configure $(CONF_FLAGS) --prefix=/usr \
		  --mandir=\$${prefix}/share/man \
		  --infodir=\$${prefix}/share/info --sysconfdir=/etc \
		  --with-jit=yes --with-ikvm-native=no --with-preview=yes \
		  --with-libgdiplus=installed --with-x=yes \
		  --with-moonlight=yes \
		  --with-oprofile=yes

# Mono's build system doesn't like -j > 1
MAKE_FLAGS += -j1
export MAKEFLAGS=$(MAKE_FLAGS)

ifeq ($(DEB_BUILD_ARCH), i386)
#	MAKE_FLAGS += RUNTIME=$(CURDIR)/debian/mono-aot-wrapper
endif

# Include dpatch stuff.
include /usr/share/dpatch/dpatch.make

cli-wrapper: debian/cli-wrapper.c
	$(CC) -o cli-wrapper debian/cli-wrapper.c `pkg-config glib-2.0 --cflags --libs`

configure-arch: patch configure-arch-stamp
configure-arch-stamp:
	dh_testdir
	#chmod +x debian/autogen.sh
	#NOCONFIGURE=1 debian/autogen.sh
	$(CONFIGURE) --disable-mcs-build
	touch configure-arch-stamp

configure-indep: patch configure-indep-stamp
configure-indep-stamp:
	dh_testdir
	#chmod +x debian/autogen.sh
	#NOCONFIGURE=1 debian/autogen.sh
	$(CONFIGURE)
	touch configure-indep-stamp

build-arch: configure-arch build-arch-stamp
build-arch-stamp: cli-wrapper
	dh_testdir
	LC_ALL=C $(MAKE) $(MAKE_FLAGS) EXTERNAL_MCS=false EXTERNAL_MONO=false
	cd mcs/jay && \
	  $(MAKE)
	cd debian/detector && \
	  $(MAKE)
	#debian/mono-aot-bootstrap
	touch build-arch-stamp

build-indep: configure-indep build-indep-stamp
build-indep-stamp:
	dh_testdir
	LC_ALL=C $(MAKE) $(MAKE_FLAGS) EXTERNAL_MCS=false EXTERNAL_MONO=false
	chmod +x debian/dh_makeclilibs \
	         debian/dh_clideps \
	         debian/dh_clistrip \
	         debian/dh_clifixperms \
	         debian/dh_monoaot
	touch build-indep-stamp

build: build-arch

build-all: build-arch build-indep

clean: clean-patched unpatch
	#rm -f configure

clean-patched:
	dh_testdir
	dh_testroot
	[ ! -f Makefile ] || $(MAKE) distclean
	# distclean misses stuff
	find -name "*.mdb" -delete
	# AOT stuff we created using mono-aot-wrapper/mono-aot-bootstrap
	find mcs/class/lib -name "*.so" -delete
	-cd debian/detector && $(MAKE) clean
	rm -f cli-wrapper debian/MonoGetAssemblyName.exe
	rm -rf $(MONO_SHARED_DIR)/.wapi

	rm -f mcs/class/lib/default/mono-api-info.exe               \
	      mcs/class/lib/net_2_0/mono-api-info.exe               \
	      mcs/class/Managed.Windows.Forms/resources/*.resources \
	      mcs/class/Mono.Data.Sqlite/resources/SR.resources     \
	      mcs/class/Novell.Directory.Ldap/Novell.Directory.Ldap.Utilclass/ResultCodeMessages.resources \
	      mcs/class/System.Web/resources/TranslationResources.resources

	rm -f configure-*-stamp
	rm -f build-*-stamp
	rm -f install-*-stamp
	dh_clean

install: install-arch install-indep

install-arch: install-arch-stamp
install-arch-stamp:
	dh_testdir
	dh_testroot
	#dh_clean -k -s
	dh_installdirs -s
	$(MAKE) install DESTDIR=$(CURDIR)/debian/tmp
	cd mcs/jay && \
	  $(MAKE) install DESTDIR=$(CURDIR)/debian/tmp prefix=/usr INSTALL=../../install-sh
	touch install-arch-stamp

install-indep: install-indep-stamp
install-indep-stamp:
	dh_testdir
	dh_testroot
	#dh_clean -k -i
	dh_installdirs -i
	cd mcs && \
	  $(MAKE) install DESTDIR=$(CURDIR)/debian/tmp && \
	  $(MAKE) install DESTDIR=$(CURDIR)/debian/tmp PROFILE=net_2_0
	  $(MAKE) install DESTDIR=$(CURDIR)/debian/tmp PROFILE=net_2_1
	# copy missing 2.0 manpages
	cp $(CURDIR)/debian/tmp/usr/share/man/man1/al.1 \
	   $(CURDIR)/debian/tmp/usr/share/man/man1/al2.1
	cp $(CURDIR)/debian/tmp/usr/share/man/man1/mcs.1 \
	   $(CURDIR)/debian/tmp/usr/share/man/man1/gmcs.1
	cp $(CURDIR)/debian/tmp/usr/share/man/man1/mcs.1 \
	   $(CURDIR)/debian/tmp/usr/share/man/man1/smcs.1
	cp $(CURDIR)/debian/tmp/usr/share/man/man1/mono-service.1 \
	   $(CURDIR)/debian/tmp/usr/share/man/man1/mono-service2.1
	cp $(CURDIR)/debian/tmp/usr/share/man/man1/mkbundle.1 \
	   $(CURDIR)/debian/tmp/usr/share/man/man1/mkbundle2.1
	cp $(CURDIR)/debian/tmp/usr/share/man/man1/wsdl.1 \
	   $(CURDIR)/debian/tmp/usr/share/man/man1/wsdl2.1
	cp $(CURDIR)/debian/tmp/usr/share/man/man1/monop.1 \
	   $(CURDIR)/debian/tmp/usr/share/man/man1/monop2.1
	cp $(CURDIR)/debian/tmp/usr/share/man/man1/ilasm.1 \
	   $(CURDIR)/debian/tmp/usr/share/man/man1/ilasm2.1
	cp $(CURDIR)/debian/tmp/usr/share/man/man1/resgen.1 \
	   $(CURDIR)/debian/tmp/usr/share/man/man1/resgen2.1
	# move System.Xml.Linq.dll symlink to the correct directory
	mv $(CURDIR)/debian/tmp/usr/lib/mono/3.5/System.Xml.Linq.dll \
	   $(CURDIR)/debian/tmp/usr/lib/mono/2.0/
	touch install-indep-stamp

binary: binary-arch binary-indep

binary-indep: build-arch install-arch build-indep install-indep
	dh_testdir
	dh_testroot

	# we do not want nunit, it's a forked version
	# nunit 2.4 API has changed too much, thus needing this nunit 2.2 now
	#rm -f debian/tmp/usr/lib/pkgconfig/mono-nunit.pc
	#rm -f debian/tmp/usr/lib/mono/1.0/nunit*
	#rm -f debian/tmp/usr/lib/mono/2.0/nunit*
	#rm -rf debian/tmp/usr/lib/mono/gac/nunit*
	#rm -f debian/tmp/usr/bin/nunit*
	# upstream forgot to remove this one
	rm -f debian/tmp/usr/bin/mbas
	# don't want docs of bundled libgc
	rm -rf debian/tmp/usr/share/libgc-mono
	# never ever install cecil.pc! mono ships an internal version for GAC only
	# args, mono-tools >= 1.9 needs this now :(
	#rm -f debian/tmp/usr/lib/pkgconfig/cecil.pc
	# Mono.Mozilla.dll is linked with CLI 2.0, thus the symlink in 1.0/ doesn't make sense
	rm -f debian/tmp/usr/lib/mono/1.0/Mono.Mozilla.dll

	# that exclude list are programs for arch-dep packages
	dh_install -i -Xbin/monodis -Xbin/monograph -Xbin/mono-find-provides -Xbin/mono-find-requires -Xbin/pedump -Xbin/jay

	# Late GAC
	install -D -m 755 debian/mono.runtime-script debian/mono-gac/usr/share/cli-common/runtimes.d/mono

	# Build the late-GAC tool,
	# using the built Mono runtime from debian/tmp
	# (thus the install-arch target dependency!)
	mkdir -p debian/mono-gac/usr/share/mono
	$(RUN_MONO) mcs/class/lib/default/mcs.exe /t:exe \
	  /out:debian/mono-gac/usr/share/mono/MonoGetAssemblyName.exe \
	  debian/MonoGetAssemblyName.cs

	install -m 644 debian/System.Data.dll.config debian/libmono-system-data1.0-cil/usr/lib/mono/gac/System.Data/1.0.*/
	install -m 644 debian/System.Data.dll.config debian/libmono-system-data2.0-cil/usr/lib/mono/gac/System.Data/2.0.*/
	install -m 644 debian/System.Drawing.dll.config debian/libmono-system1.0-cil/usr/lib/mono/gac/System.Drawing/1.0.*/
	install -m 644 debian/System.Drawing.dll.config debian/libmono-system2.0-cil/usr/lib/mono/gac/System.Drawing/2.0.*/
	install -m 644 debian/System.Windows.Forms.dll.config debian/libmono-winforms1.0-cil/usr/lib/mono/gac/System.Windows.Forms/1.0.*/
	install -m 644 debian/System.Windows.Forms.dll.config debian/libmono-winforms2.0-cil/usr/lib/mono/gac/System.Windows.Forms/2.0.*/
	install -m 644 debian/Mono.Cairo.dll.config debian/libmono-cairo1.0-cil/usr/lib/mono/gac/Mono.Cairo/1.0.*/
	install -m 644 debian/Mono.Cairo.dll.config debian/libmono-cairo2.0-cil/usr/lib/mono/gac/Mono.Cairo/2.0.*/
	install -m 644 debian/Mono.Data.SqliteClient.dll.config debian/libmono-sqlite1.0-cil/usr/lib/mono/gac/Mono.Data.SqliteClient/1.0.*/
	install -m 644 debian/Mono.Data.SqliteClient.dll.config debian/libmono-sqlite2.0-cil/usr/lib/mono/gac/Mono.Data.SqliteClient/2.0.*/
	install -m 644 debian/Mono.Data.Sqlite.dll.config debian/libmono-sqlite1.0-cil/usr/lib/mono/gac/Mono.Data.Sqlite/1.0.*/
	install -m 644 debian/Mono.Data.Sqlite.dll.config debian/libmono-sqlite2.0-cil/usr/lib/mono/gac/Mono.Data.Sqlite/2.0.*/
	install -m 644 debian/FirebirdSql.Data.Firebird.dll.config debian/libmono-firebirdsql1.7-cil/usr/lib/mono/gac/FirebirdSql.Data.Firebird/1.7.*/
	
	dh_link -i
	dh_installchangelogs -i
	dh_installdocs -i
	dh_installman -i
	debian/dh_clistrip -i --dbg-package=mono-dbg
	dh_compress -i
	dh_fixperms -i
	debian/dh_clifixperms -i
	dh_installdeb -i
	#DH_VERBOSE=1 DH_AUTOSCRIPTDIR=$(CURDIR)/debian debian/dh_monoaot -i
	debian/dh_makeclilibs -i -m 1.0 internal-mono
	debian/dh_makeclilibs -p libmono1.0-cil -m 1.9 internal-mono
	debian/dh_makeclilibs -p libmono2.0-cil -m 1.9 internal-mono
	debian/dh_makeclilibs -p libmono-cairo1.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-cairo2.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-corlib1.0-cil -m 1.2.2.1 internal-mono
	debian/dh_makeclilibs -p libmono-corlib2.0-cil -m 1.2.2.1 internal-mono
	debian/dh_makeclilibs -p libmono-data-tds1.0-cil -m 1.9.1+dfsg-3 internal-mono
	debian/dh_makeclilibs -p libmono-data-tds2.0-cil -m 1.9.1+dfsg-3 internal-mono
	debian/dh_makeclilibs -p libmono-ldap1.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-ldap2.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-oracle2.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-microsoft-build2.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-system1.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-system2.0-cil -m 1.9 internal-mono
	debian/dh_makeclilibs -p libmono-system-data1.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-system-data2.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-system-ldap2.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-system-web2.0-cil -m 1.9.1 internal-mono
	debian/dh_makeclilibs -p libmono-security1.0-cil -m 1.9 internal-mono
	debian/dh_makeclilibs -p libmono-security2.0-cil -m 1.9 internal-mono
	debian/dh_makeclilibs -p libmono-sqlite1.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-sqlite2.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-web1.0-cil -m 1.9 internal-mono
	debian/dh_makeclilibs -p libmono-web2.0-cil -m 1.9 internal-mono
	debian/dh_makeclilibs -p libmono-winforms1.0-cil -m 1.2.6 internal-mono
	debian/dh_makeclilibs -p libmono-winforms2.0-cil -m 1.9 internal-mono
	debian/dh_makeclilibs -p libmono-relaxng1.0-cil -m 1.9 internal-mono
	debian/dh_makeclilibs -p libmono-relaxng2.0-cil -m 1.9 internal-mono
	debian/dh_clideps -i -l debian/tmp internal-mono
	#DH_VERBOSE=1 debian/dh_clideps -i -l debian/tmp internal-mono
	# mono-gac needs special runtime dep, to prevent circular dep (mono-runtime <-> mono-gac)
	debian/dh_clideps -p mono-gac -r internal-mono
	dh_gencontrol -i -- -Vmono:upversion=$(UPVERSION) -Vmono:next-upversion=$(NEXT_UPVERSION)
	dh_md5sums -i
	dh_builddeb -i

binary-arch: build-arch install-arch
	dh_testdir
	dh_testroot
	
	cd debian/detector && \
	  install -D -m 755 binfmt-detector-cli $(CURDIR)/debian/mono-common/usr/lib/cli/binfmt-detector-cli
	install -D -m 755 cli-wrapper debian/mono-common/usr/bin/cli-wrapper
	install -D -m 644 -o root -g root debian/cli.binfmt \
	  debian/mono-common/usr/share/binfmts/cli

	dh_install -s
	dh_link -s
	dh_installchangelogs -s
	dh_installchangelogs -pmono-jay $(CURDIR)/mcs/jay/ChangeLog
	dh_installdocs -s
	dh_installman -s
	dh_installexamples -s
	dh_installexamples -pmono-jay $(CURDIR)/mcs/jay/skeleton.cs
	dh_strip -pmono-jit --dbg-package=mono-jit-dbg
	dh_strip -plibmono0 --dbg-package=libmono0-dbg
	dh_strip -s
	dh_compress -s -Xskeleton.cs
	dh_fixperms -s
	dh_makeshlibs -plibmono0 -V 'libmono0 (>= $(UPVERSION))'
	dh_installdeb -s
	dh_shlibdeps -s -Xlibmono-profiler-cov -ldebian/libmono0/usr/lib
	dh_gencontrol -s -- -Vmono:upversion=$(UPVERSION) -Vmono:next-upversion=$(NEXT_UPVERSION)
	dh_md5sums -s
	dh_builddeb -s

.PHONY: clean build binary-indep binary-arch install binary patch unpatch
.NOTPARALLEL:
